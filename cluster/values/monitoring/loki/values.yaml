---
global:
  extraEnvFrom:
    - secretRef:
        name: minio-auth
  extraArgs:
    - '-config.expand-env=true'
loki:
  auth_enabled: false

  #compactor:
    #retention_enabled: true
    #delete_request_store: s3
  limits_config:
    retention_period: 60d
    max_label_names_per_series: 30
    ingestion_burst_size_mb: 100 
    # reject_old_samples: false

  storage:
    type: s3
    bucketNames:
      chunks: loki
      ruler: loki
      admin: loki
    s3:
      access_key_id: ${AWS_ACCESS_KEY_ID}
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
  storage_config:
    use_thanos_objstore: true
    object_store:
      s3:
        bucket_name: loki
        endpoint: minio.bukla.hu
  ingester:
    grpc_client_config:
      max_message_msg_size: 4194304 
  #server:
    #grpc_server_max_recv_msg_size: 15728640
    #grpc_server_max_send_msg_size: 15728640

  schemaConfig:
    configs:
      - from: 2023-01-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h

  ingester: # In Loki, the chunk_encoding field specifies the type of encoding to use for compressing log data chunks
    chunk_encoding: snappy

  tracing:
    enabled: true

  rulerConfig:
    storage:
      type: local
      local:
        directory: /var/loki/rules/
    rule_path: "/var/loki/rules-temp"
    ring:
      kvstore:
        store: inmemory
    alertmanager_url: http://alertmanager-operated.monitoring:9093
    enable_alertmanager_v2: true

gateway:
  nginxConfig:
    clientMaxBodySize: 50M
  ingress:
    ingressClassName: "nginx-internal"
    enabled: true
    hosts:
      - host: loki-gateway.bukla.hu
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - loki-gateway.bukla.hu
        secretName: wildcard-bukla-tls

monitoring:
  dashboards:
    enabled: true
  rules:
    enabled: true
    labels:
      release: bukla
  serviceMonitor:
    enabled: true

networkPolicy:
  alertmanager:
    # -- Specify the alertmanager port used for alerting
    port: 9093
    # -- Specifies the alertmanager Pods.
    # As this is cross-namespace communication, you also need the namespaceSelector.
    podSelector:
    # -- Specifies the namespace the alertmanager is running in
    namespaceSelector: {}

deploymentMode: Distributed

ingester:
  replicas: 1
querier:
  replicas: 1
queryFrontend:
  replicas: 1
queryScheduler:
  replicas: 1
distributor:
  replicas: 1
compactor:
  replicas: 1
indexGateway:
  replicas: 1

# optional experimental components
bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0

# Enable minio for storage
minio:
  enabled: false

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0

